from django.test import TestCase
from django.db import models
from django.db.migrations.executor import MigrationExecutor
from django.db.migrations.loader import MigrationLoader
from django.db import connection


class DatabaseModelsTestCase(TestCase):
    def test_model_definition(self):
        #loading migrations
        loader = MigrationLoader(connection=connection)
        migrations = loader.graph.leaf_nodes(loader.graph.ancestors(loader.graph.leaf_nodes('bco_api')))

        #all migrations applied???
        executor = MigrationExecutor(connection)
        executor.migrate('bco_api', migrations)

        #model classes
        models_module = __import__('bco_api.api.model', fromlist=['*'])
        model_classes = [getattr(models_module, name) for name in dir(models_module) if
                         isinstance(getattr(models_module, name), type(models.Model))]

        # can models be used to create database tables??check./ and cretaing temp table to validate model
        for model_class in model_classes:
            
            with connection.schema_editor() as schema_editor:
                schema_editor.create_model(model_class)

                # Assertting table exists in the database
                self.assertIn(model_class._meta.db_table, connection.introspection.table_names())

                #del the temp table
                schema_editor.delete_model(model_class)
